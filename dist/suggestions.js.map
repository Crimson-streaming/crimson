{
  "version": 3,
  "sources": ["../src/suggestions.js"],
  "sourcesContent": ["document.addEventListener(\"DOMContentLoaded\", async function () {\r\n    try {\r\n        const fullTitle = document.title;\r\n        const regex = /Regarder\\s(.+?)\\sen\\sstreaming/;\r\n        const match = fullTitle.match(regex);\r\n        if (!match || !match[1]) {\r\n            console.error(\"Impossible d'extraire le nom du film depuis le titre HTML.\");\r\n            return;\r\n        }\r\n        const filmName = match[1].trim();\r\n        console.log(\"Nom du film extrait :\", filmName);\r\n\r\n        const dataResponse = await fetch('../search/data.json');\r\n        const dataFilms = await dataResponse.json();\r\n\r\n        const searchResponse = await fetch('../search/f.json');\r\n        const searchFilms = await searchResponse.json();\r\n\r\n        const currentFilm = dataFilms.find(film => film.nom === filmName);\r\n        if (!currentFilm) {\r\n            console.error(\"Film introuvable dans data.json :\", filmName);\r\n            return;\r\n        }\r\n        const currentGenres = currentFilm.genre.split(',').map(g => g.trim());\r\n        console.log(\"Genres du film :\", currentGenres);\r\n\r\n        const recommendedFilms = dataFilms\r\n        .filter(film => film.nom !== filmName)\r\n        .map(film => {\r\n            const filmGenres = film.genre.split(',').map(g => g.trim());\r\n            const commonGenres = filmGenres.filter(genre => currentGenres.includes(genre));\r\n            return {\r\n                ...film,\r\n                commonGenresCount: commonGenres.length\r\n            };\r\n        })\r\n        .filter(film => film.commonGenresCount > 0)\r\n        .sort((a, b) => b.commonGenresCount - a.commonGenresCount)\r\n        .slice(0, 10);\r\n    \r\n        console.log(\"Films recommand\u00E9s :\", recommendedFilms);\r\n\r\n        const filmsWithPaths = recommendedFilms.map(film => {\r\n            const searchFilm = searchFilms.find(item => item.nom === film.nom);\r\n            return {\r\n                ...film,\r\n                emplacement: searchFilm ? searchFilm.emplacement.split('/').pop() : null\r\n            };\r\n        }).filter(film => film.emplacement);\r\n\r\n        console.log(\"Films avec emplacements :\", filmsWithPaths);\r\n\r\n        const carouselContainer = document.getElementById('suggestions-carousel');\r\n        if (!carouselContainer) {\r\n            console.error(\"Le conteneur du carousel n'a pas \u00E9t\u00E9 trouv\u00E9.\");\r\n            return;\r\n        }\r\n\r\n        filmsWithPaths.forEach(film => {\r\n            const suggestionHtml = `\r\n                <div class=\"item\">\r\n                    <div class=\"single-video\">\r\n                        <a href=\"${film.emplacement}\" title=\"${film.nom}\">\r\n                            <div class=\"video-img\"> \r\n                                <span class=\"video-item-content\">${film.nom}</span>\r\n                                <img src=\"${film.affiche}\" alt=\"${film.nom}\" title=\"${film.nom}\">         \r\n                            </div>       \r\n                        </a>\r\n                    </div>\r\n                </div>`;\r\n            carouselContainer.innerHTML += suggestionHtml;\r\n        });\r\n\r\n        $('.owl-carousel').owlCarousel({\r\n            loop: false,\r\n            margin: 10,\r\n            nav: true,\r\n            navText: [\r\n                '<i class=\"fas fa-angle-left\"></i>',\r\n                '<i class=\"fas fa-angle-right\"></i>'\r\n            ],\r\n            responsive: {\r\n                0: {\r\n                    items: 2,\r\n                    slideBy: 2,\r\n                    margin: 15\r\n                },\r\n                480: {\r\n                    items: 3,\r\n                    slideBy: 3\r\n                },\r\n                768: {\r\n                    items: 4,\r\n                    slideBy: 4\r\n                },\r\n                991: {\r\n                    items: 5,\r\n                    slideBy: 5\r\n                },\r\n                1198: {\r\n                    items: 7,\r\n                    slideBy: 7\r\n                }\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.error(\"Erreur lors du traitement :\", error);\r\n    }\r\n});"],
  "mappings": "MAAA,SAAS,iBAAiB,mBAAoB,gBAAkB,CAC5D,GAAI,CACA,IAAMA,EAAY,SAAS,MACrBC,EAAQ,iCACRC,EAAQF,EAAU,MAAMC,CAAK,EACnC,GAAI,CAACC,GAAS,CAACA,EAAM,CAAC,EAAG,CACrB,QAAQ,MAAM,4DAA4D,EAC1E,MACJ,CACA,IAAMC,EAAWD,EAAM,CAAC,EAAE,KAAK,EAC/B,QAAQ,IAAI,wBAAyBC,CAAQ,EAG7C,IAAMC,EAAY,MADG,MAAM,MAAM,qBAAqB,GACjB,KAAK,EAGpCC,EAAc,MADG,MAAM,MAAM,kBAAkB,GACZ,KAAK,EAExCC,EAAcF,EAAU,KAAKG,GAAQA,EAAK,MAAQJ,CAAQ,EAChE,GAAI,CAACG,EAAa,CACd,QAAQ,MAAM,oCAAqCH,CAAQ,EAC3D,MACJ,CACA,IAAMK,EAAgBF,EAAY,MAAM,MAAM,GAAG,EAAE,IAAIG,GAAKA,EAAE,KAAK,CAAC,EACpE,QAAQ,IAAI,mBAAoBD,CAAa,EAE7C,IAAME,EAAmBN,EACxB,OAAOG,GAAQA,EAAK,MAAQJ,CAAQ,EACpC,IAAII,GAAQ,CAET,IAAMI,EADaJ,EAAK,MAAM,MAAM,GAAG,EAAE,IAAIE,GAAKA,EAAE,KAAK,CAAC,EAC1B,OAAOG,GAASJ,EAAc,SAASI,CAAK,CAAC,EAC7E,MAAO,CACH,GAAGL,EACH,kBAAmBI,EAAa,MACpC,CACJ,CAAC,EACA,OAAOJ,GAAQA,EAAK,kBAAoB,CAAC,EACzC,KAAK,CAACM,EAAGC,IAAMA,EAAE,kBAAoBD,EAAE,iBAAiB,EACxD,MAAM,EAAG,EAAE,EAEZ,QAAQ,IAAI,yBAAuBH,CAAgB,EAEnD,IAAMK,EAAiBL,EAAiB,IAAIH,GAAQ,CAChD,IAAMS,EAAaX,EAAY,KAAKY,GAAQA,EAAK,MAAQV,EAAK,GAAG,EACjE,MAAO,CACH,GAAGA,EACH,YAAaS,EAAaA,EAAW,YAAY,MAAM,GAAG,EAAE,IAAI,EAAI,IACxE,CACJ,CAAC,EAAE,OAAOT,GAAQA,EAAK,WAAW,EAElC,QAAQ,IAAI,4BAA6BQ,CAAc,EAEvD,IAAMG,EAAoB,SAAS,eAAe,sBAAsB,EACxE,GAAI,CAACA,EAAmB,CACpB,QAAQ,MAAM,uDAA8C,EAC5D,MACJ,CAEAH,EAAe,QAAQR,GAAQ,CAC3B,IAAMY,EAAiB;AAAA;AAAA;AAAA,mCAGAZ,EAAK,WAAW,YAAYA,EAAK,GAAG;AAAA;AAAA,mEAEJA,EAAK,GAAG;AAAA,4CAC/BA,EAAK,OAAO,UAAUA,EAAK,GAAG,YAAYA,EAAK,GAAG;AAAA;AAAA;AAAA;AAAA,wBAKlFW,EAAkB,WAAaC,CACnC,CAAC,EAED,EAAE,eAAe,EAAE,YAAY,CAC3B,KAAM,GACN,OAAQ,GACR,IAAK,GACL,QAAS,CACL,oCACA,oCACJ,EACA,WAAY,CACR,EAAG,CACC,MAAO,EACP,QAAS,EACT,OAAQ,EACZ,EACA,IAAK,CACD,MAAO,EACP,QAAS,CACb,EACA,IAAK,CACD,MAAO,EACP,QAAS,CACb,EACA,IAAK,CACD,MAAO,EACP,QAAS,CACb,EACA,KAAM,CACF,MAAO,EACP,QAAS,CACb,CACJ,CACJ,CAAC,CACL,OAASC,EAAO,CACZ,QAAQ,MAAM,8BAA+BA,CAAK,CACtD,CACJ,CAAC",
  "names": ["fullTitle", "regex", "match", "filmName", "dataFilms", "searchFilms", "currentFilm", "film", "currentGenres", "g", "recommendedFilms", "commonGenres", "genre", "a", "b", "filmsWithPaths", "searchFilm", "item", "carouselContainer", "suggestionHtml", "error"]
}
